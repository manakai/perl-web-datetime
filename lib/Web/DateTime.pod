=head1 NAME

Web::DateTime - Date and time for Web

=head1 SYNOPSIS

  use Web::DateTime::Parser;
  $parser = Web::DateTime::Parser->new;
  $dt = $parser->parse_global_date_and_time_string ($value);
  warn $dt->to_unix_integer;

=head1 DESCRIPTION

The C<Web::DateTime> class represents a date and/or time with accessor
and serializer methods for Web.  To create an instance of the
C<Web::DateTime> class from various date and/or time formatted
strings, use L<Web::DateTime::Parser> module.

=head1 METHODS

Following methods are available:

=over 4

=item $dt = Web::DateTime->new_from_unix_time ($time)

Create a new instance of C<Web::DateTime> from the specified number,
representing a Unix time (i.e. number of seconds from January 1, 1970,
00:00:00 UTC).  The number can contain fractional part and can be
negative.

=item $dt = Web::DateTime->new_from_object ($obj)

Create a new instance of C<Web::DateTime> from the specified date/time
object.  The argument must be an instance of L<DateTime> or
L<Time::Piece>.  (More classes might be supported in future.)

As the C<Web::DateTime> (and most Web date/time formats) can't handle
leap seconds, if the L<DateTime> object represents a leap second, the
result C<Web::DateTime> object represents the second just after the
leap second.

=item true = $dt->is_date_time

=item false = $dt->is_time_zone

=item false = $dt->is_duration

=item false = $dt->is_interval

Return whether the object is of the specified type or not.

=item $boolean = $dt->has_component ($name)

Return whether the specified component is given when the object is
created.  Available component names are: C<year>, C<month> (month of
year), C<week> (week of year), C<day> (day of month, week, or year),
C<time> (hour, minute, and optional second of day), and C<offset>
(time zone offset).

For example, if the object is created from a valid week string,
C<year> and C<week> will return true, and any other value will return
false.

=item $number = $dt->year

=item $number = $dt->month

=item $number = $dt->day

=item $number = $dt->hour

=item $number = $dt->minute

=item $number = $dt->second

Return the number in the year, month, day, hour, minute, or second
component of the object, respectively.  If a time zone is associated
with the object, the return value is in that time zone.

=item $number = $dt->utc_year

=item $number = $dt->utc_month

=item $number = $dt->utc_day

=item $number = $dt->utc_hour

=item $number = $dt->utc_minute

=item $number = $dt->utc_second

Return the number in the year, month, day, hour, minute, or second
component of the object, respectively.  If a time zone is associated
with the object, the return value is converted into UTC.  Otherwise,
no convertion is performed.

=item $number = $dt->utc_week

Return the week number of the UTC date and time represented by the
object.

=item $number = $dt->utc_week_year

Return the week-year number of the UTC date and time represented by
the object.

=item $number = $dt->day_of_week

Return the day of week represented by the object, as a number.
Sunday, Monday, ..., and Saturday are represented as C<0>, C<1>, ...,
and C<6>, respectively.

=item $number = $dt->utc_day_of_week

Return the day of week of the UTC date represented by the object, as a
number.  Sunday, Monday, ..., and Saturday are represented as C<0>,
C<1>, ..., and C<6>, respectively.

=item $string = $dt->second_fraction_string

Return the fraction part of the second component of the time
represented by the object, including leading C<.> character (decimal
separator).  If the fraction part is zero (the second component is an
integer), the empty string is returned.

=item $number = $dt->fractional_second

Return the second component, including fractional part if any, as a
number.

=item $number = $dt->utc_fractional_second

Return the second component of the UTC time represented by the object,
including fractional part if any, as a number.

=item $tz = $dt->time_zone

Return the associated L<Web::DateTime::TimeZone> object, if any, or
C<undef>.

=item $dt->set_time_zone ($tz)

Associate a L<Web::DateTime::TimeZone> object to the object.  Any
existing time zone object is disassociated.  If the argument is
C<undef>, no new time zone is associated with the object.

=item $number = $dt->to_unix_integer

Return a Unix time value (C<time_t> integer) [POSIX.1] of the time
represented by the object.  The value can be positive or negative, and
might not be a 32-bit integer.  Any fraction part of seconds is
discarded.  Note that the Unix C<time_t> value represents the time
without associated time zone information.  If the object has no
associated time zone, it is considered as a UTC timestamp for the
purpose of conversion.

=item $number = $dt->to_unix_number

Return a Unix time value of the time represented by the object, with
fractional part of the second, if any.  The value can be positive or
negative, and might not be an integer.  Note that the Unix time value
represents the time without associated time zone information.  If the
object has no associated time zone, it is considered as a UTC
timestamp for the purpose of conversion.

=item $number = $dt->to_html_number

Return the number of the date and time represented by the object, as
used for, e.g., C<< <input type=datetime> >> (i.e. number of
milliseconds from the beginning of January 1, 1970 UTC) [HTML].  Note
that the number might not be an integer.

=item $number = $dt->to_html_month_number

Return the number (an integer) of the month represented by the object,
as used for C<< <input type=month> >> (i.e. number of months from
January 1970) [HTML].

=item $string = $dt->to_global_date_and_time_string

Serialize the date and time value represented by the object as an HTML
valid global date and time string [HTML].

The serialized value always uses the UTC time zone.  The time zone of
the object is ignored (it does affect the value but the time zone
itself does not appear in the serialization).  If the object is not
associated with any time zone, it is interpreted as UTC timestamp
(which could be wrong, however).

Use C<to_time_zoned_global_date_and_time_string> method to preserve
time zone.

The value might not be a normalized date and time string.

The value is, in most cases, also a valid XML Schema C<xs:dateTime> or
C<xs:dateTimeStamp> value, a valid RFC 3339 C<date-time> value, a
valid Atom 1.0 Date construct's content, a valid RSS 1.0 C<dc:date>
element content, and a valid C<http://schema.org/DateTime> value.

This method is suitable for values for HTML C<< <input type=datetime>
>>, C<time> elements, and C<< <ins datetime=""> >> and C<< <del
datetime=""> >> attributes.

=item $string = $dt->to_normalized_forced_utc_global_date_and_time_string

Serialize the date and time value represented by the object as an HTML
valid normalized forced-UTC global date and time string [HTML].

=item $string = $dt->to_time_zoned_global_date_and_time_string

Serialize the date and time value represented by the object as an HTML
valid global date and time string [HTML].

If a time zone is associated with the object, it is used to serialize
the time value.  If the object is not associated with any time zone,
it is interpreted as UTC timestamp (which could be wrong, however).

Use C<to_date_and_time_string> method to always obtain a UTC
timestamp.

This method is suitable for values for HTML C<< <input type=datetime>
>>, C<time> elements, and C<< <ins datetime=""> >> and C<< <del
datetime=""> >> attributes.

=item $string = $dt->to_http_date_string

Serialize the date and time value represented by the object as an HTTP
valid C<HTTP-date> (C<rfc1123-date>) string [HTTP].  Any fraction part
of seconds is discarded.

This method is suitable for values for HTTP C<Last-Modified>,
C<Expires>, and C<Date> headers, as well as C<Expires> attribute in
HTTP Cookies.

=item $string = $dt->to_rss2_date_time_string

Serialize the date and time value represented by the object as a valid
RSS 2.0 date and time string [RSS2] [RSS2BP].  Any fraction part of
seconds is discarded.

=item $string = $dt->to_local_date_and_time_string

Serialize the date and time value represented by the object as an HTML
valid local date and time string [HTML].  Note that time zone is
ignored.

The value might not be a normalized local date and time string.  It
is, in most cases, also a valid XML Schema C<xs:dateTime> value.

This method is suitable for values for HTML C<< <input
type=datetime-local> >> and C<time> elements.

=item $string = $dt->to_normalized_local_date_and_time_string

Serialize the date and time value represented by the object as an HTML
valid normalized local date and time string [HTML].  Note that time
zone is ignored.

=item $string = $dt->to_document_last_modified_string

Serialize the date and time value represented by the object in the
format of C<document.lastModified> IDL attribute [HTML].  Any fraction
part of seconds is discarded.  The time zone of the object, if any, or
UTC, is used to serialize the value, but the time zone offset is not
included in this format.

=item $string = $dt->to_date_string

Serialize the date value represented by the object as an HTML valid
date string [HTML].  Note that time and time zone are ignored.

This method is suitable for values for HTML C<< <input type=date> >>,
C<time> elements, C<< <ins datetime=""> >> and C<< <del datetime="">
>> attributes, and microdata C<http://schema.org/Date> item values.

=item $string = $dt->to_date_string_with_optional_time

Serialize the date value represented by the object as HTML valid date
string with optional time [HTML].  If the object represents a date,
time, and time zone, it is serialized as a global date and time
string.  Otherwise, it is serialized as a date string.

This method is suitable for values for HTML C<< <ins datetime=""> >>
and C<< <del datetime=""> >> attributes.

=item $string = $dt->to_year_string

Serialize the year value represented by the object for HTML.  Note
that month, day, time, and time zone are ignored.

This method is suitable for values for HTML C<time> elements.

=item $string = $dt->to_month_string

Serialize the month value represented by the object as an HTML valid
month string [HTML].  Note that day, time, and time zone are ignored.

This method is suitable for values for HTML C<< <input type=month> >>
and C<time> elements.

=item $string = $dt->to_yearless_date_string

Serialize the date value represented by the object as an HTML valid
yearless date string [HTML].  Note that year, time, and time zone are
ignored.

This method is suitable for values for HTML C<time> elements.

=item $string = $dt->to_week_string

Serialize the week value represented by the object as an HTML valid
week string [HTML].  Note that month, day, time, and time zone are
ignored.

This method is suitable for values for HTML C<< <input type=week> >>
and C<time> elements.

=item $string = $dt->to_time_string

Serialize the time value represented by the object as an HTML valid
time string [HTML].  Note that date and time zone are ignored.

This method is suitable for values for HTML C<< <input type=time> >>,
C<time> elements, and microdata C<http://schema.org/Time> item values.

=item $string = $dt->to_shortest_time_string

Serialize the time value represented by the object as an HTML valid
time string [HTML], using shortest possible form.  Note that date and
time zone are ignored.

=item $datetime = $dt->to_date_time

Return a new L<DateTime> object which represents the time represented
by the object.  If the object has associated time zone, the returned
object is in the equivalent time zone.  Otherwise, the returned object
is in the C<floating> time zone.  Note that Web date and time formats
do not support leap seconds while L<DateTime> does support them such
that operations on Web date and time values and L<DateTime> objects
might obtain different results.

This method requires the L<DateTime> module.

=item $timepiece = $dt->to_time_piece_gm

Return a new L<Time::Piece> object which represents the time
represented by the object, in UTC.  If the object is not associated
with any time zone, it is handled as if it were associated with UTC.

This method requires the L<Time::Piece> module.

=item $timepiece = $dt->to_time_piece_local

Return a new L<Time::Piece> object which represents the time
represented by the object, in local time zone (i.e. Perl's
C<localtime>'s time zone).  If the object is not associated with any
time zone, it is handled as if it were associated with UTC and then
converted as appropriate.

This method requires the L<Time::Piece> module.

=back

=head1 DEPENDENCY

The module requires Perl 5.8 or later.

Methods C<to_date_time>, C<to_time_piece_gm>, and
C<to_time_piece_local> require more modules.

=head1 SPECIFICATIONS

=over 4

=item HTML

HTML Standard <http://www.whatwg.org/specs/web-apps/current-work/>.

=item POSIX.1

POSIX.1-2008
<http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap04.html#tag_04_15>.

=item HTTP

RFC 1945, Hypertext Transfer Protocol -- HTTP/1.0
<http://tools.ietf.org/html/rfc1945>.

RFC 7231, Hypertext Transfer Protocol (HTTP/1.1): Semantics and
Content <https://tools.ietf.org/html/rfc7231>.

=item RSS2

RSS 2.0 Specification <http://www.rssboard.org/rss-specification>.

=item RSS2BP

Really Simple Syndication Best Practices Profile
<http://www.rssboard.org/rss-profile>.

=back

=head1 AUTHOR

Wakaba <wakaba@suikawiki.org>.

=head1 ACKNOWLEDGEMENTS

This module contains a code derived from L<Time::Local>, whose authors
are:

  This module is based on a Perl 4 library, timelocal.pl, that was
  included with Perl 4.036, and was most likely written by Tom
  Christiansen.

  The current version was written by Graham Barr.

  It is now being maintained separately from the Perl core by Dave
  Rolsky, <autarch@urth.org>.

=head1 LICENSE

Copyright 2008-2014 Wakaba <wakaba@suikawiki.org>.

This program is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.

This program partially derived from L<Time::Local>: "Copyright (c)
1997-2003 Graham Barr, 2003-2007 David Rolsky.  All rights reserved.
This program is free software; you can redistribute it and/or modify
it under the same terms as Perl itself."

=cut
